import{o as T}from"./popup-default.js";import{g as wn}from"./popup.js";import{V as un}from"./popup-index2.js";import{p as Pn}from"./popup-index4.js";import"./popup-index3.js";function Ln(e,n){const t={};return(e[e.length-1]===""?[...e,""]:e).join((t.padRight?" ":"")+","+(t.padLeft===!1?"":" ")).trim()}const Rn=/^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,Dn=/^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,On={};function Q(e,n){return(On.jsx?Dn:Rn).test(e)}const Mn=/[ \t\n\f\r]/g;function Tn(e){return typeof e=="object"?e.type==="text"?nn(e.value):!1:nn(e)}function nn(e){return e.replace(Mn,"")===""}class _{constructor(n,t,l){this.normal=t,this.property=n,l&&(this.space=l)}}_.prototype.normal={};_.prototype.property={};_.prototype.space=void 0;function sn(e,n){const t={},l={};for(const r of e)Object.assign(t,r.property),Object.assign(l,r.normal);return new _(t,l,n)}function N(e){return e.toLowerCase()}class v{constructor(n,t){this.attribute=t,this.property=n}}v.prototype.attribute="";v.prototype.booleanish=!1;v.prototype.boolean=!1;v.prototype.commaOrSpaceSeparated=!1;v.prototype.commaSeparated=!1;v.prototype.defined=!1;v.prototype.mustUseProperty=!1;v.prototype.number=!1;v.prototype.overloadedBoolean=!1;v.prototype.property="";v.prototype.spaceSeparated=!1;v.prototype.space=void 0;let An=0;const u=b(),g=b(),U=b(),o=b(),f=b(),P=b(),x=b();function b(){return 2**++An}const z=Object.freeze(Object.defineProperty({__proto__:null,boolean:u,booleanish:g,commaOrSpaceSeparated:x,commaSeparated:P,number:o,overloadedBoolean:U,spaceSeparated:f},Symbol.toStringTag,{value:"Module"})),I=Object.keys(z);class F extends v{constructor(n,t,l,r){let a=-1;if(super(n,t),en(this,"space",r),typeof l=="number")for(;++a<I.length;){const i=I[a];en(this,I[a],(l&z[i])===z[i])}}}F.prototype.defined=!0;function en(e,n,t){t&&(e[n]=t)}function L(e){const n={},t={};for(const[l,r]of Object.entries(e.properties)){const a=new F(l,e.transform(e.attributes||{},l),r,e.space);e.mustUseProperty&&e.mustUseProperty.includes(l)&&(a.mustUseProperty=!0),n[l]=a,t[N(l)]=l,t[N(a.attribute)]=l}return new _(n,t,e.space)}const cn=L({properties:{ariaActiveDescendant:null,ariaAtomic:g,ariaAutoComplete:null,ariaBusy:g,ariaChecked:g,ariaColCount:o,ariaColIndex:o,ariaColSpan:o,ariaControls:f,ariaCurrent:null,ariaDescribedBy:f,ariaDetails:null,ariaDisabled:g,ariaDropEffect:f,ariaErrorMessage:null,ariaExpanded:g,ariaFlowTo:f,ariaGrabbed:g,ariaHasPopup:null,ariaHidden:g,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:f,ariaLevel:o,ariaLive:null,ariaModal:g,ariaMultiLine:g,ariaMultiSelectable:g,ariaOrientation:null,ariaOwns:f,ariaPlaceholder:null,ariaPosInSet:o,ariaPressed:g,ariaReadOnly:g,ariaRelevant:null,ariaRequired:g,ariaRoleDescription:f,ariaRowCount:o,ariaRowIndex:o,ariaRowSpan:o,ariaSelected:g,ariaSetSize:o,ariaSort:null,ariaValueMax:o,ariaValueMin:o,ariaValueNow:o,ariaValueText:null,role:null},transform(e,n){return n==="role"?n:"aria-"+n.slice(4).toLowerCase()}});function pn(e,n){return n in e?e[n]:n}function dn(e,n){return pn(e,n.toLowerCase())}const _n=L({attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:P,acceptCharset:f,accessKey:f,action:null,allow:null,allowFullScreen:u,allowPaymentRequest:u,allowUserMedia:u,alt:null,as:null,async:u,autoCapitalize:null,autoComplete:f,autoFocus:u,autoPlay:u,blocking:f,capture:null,charSet:null,checked:u,cite:null,className:f,cols:o,colSpan:null,content:null,contentEditable:g,controls:u,controlsList:f,coords:o|P,crossOrigin:null,data:null,dateTime:null,decoding:null,default:u,defer:u,dir:null,dirName:null,disabled:u,download:U,draggable:g,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:u,formTarget:null,headers:f,height:o,hidden:U,high:o,href:null,hrefLang:null,htmlFor:f,httpEquiv:f,id:null,imageSizes:null,imageSrcSet:null,inert:u,inputMode:null,integrity:null,is:null,isMap:u,itemId:null,itemProp:f,itemRef:f,itemScope:u,itemType:f,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:u,low:o,manifest:null,max:null,maxLength:o,media:null,method:null,min:null,minLength:o,multiple:u,muted:u,name:null,nonce:null,noModule:u,noValidate:u,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:u,optimum:o,pattern:null,ping:f,placeholder:null,playsInline:u,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:u,referrerPolicy:null,rel:f,required:u,reversed:u,rows:o,rowSpan:o,sandbox:f,scope:null,scoped:u,seamless:u,selected:u,shadowRootClonable:u,shadowRootDelegatesFocus:u,shadowRootMode:null,shape:null,size:o,sizes:null,slot:null,span:o,spellCheck:g,src:null,srcDoc:null,srcLang:null,srcSet:null,start:o,step:null,style:null,tabIndex:o,target:null,title:null,translate:null,type:null,typeMustMatch:u,useMap:null,value:g,width:o,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:f,axis:null,background:null,bgColor:null,border:o,borderColor:null,bottomMargin:o,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:u,declare:u,event:null,face:null,frame:null,frameBorder:null,hSpace:o,leftMargin:o,link:null,longDesc:null,lowSrc:null,marginHeight:o,marginWidth:o,noResize:u,noHref:u,noShade:u,noWrap:u,object:null,profile:null,prompt:null,rev:null,rightMargin:o,rules:null,scheme:null,scrolling:g,standby:null,summary:null,text:null,topMargin:o,valueType:null,version:null,vAlign:null,vLink:null,vSpace:o,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:u,disableRemotePlayback:u,prefix:null,property:null,results:o,security:null,unselectable:null},space:"html",transform:dn}),In=L({attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},properties:{about:x,accentHeight:o,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:o,amplitude:o,arabicForm:null,ascent:o,attributeName:null,attributeType:null,azimuth:o,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:o,by:null,calcMode:null,capHeight:o,className:f,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:o,diffuseConstant:o,direction:null,display:null,dur:null,divisor:o,dominantBaseline:null,download:u,dx:null,dy:null,edgeMode:null,editable:null,elevation:o,enableBackground:null,end:null,event:null,exponent:o,externalResourcesRequired:null,fill:null,fillOpacity:o,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:P,g2:P,glyphName:P,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:o,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:o,horizOriginX:o,horizOriginY:o,id:null,ideographic:o,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:o,k:o,k1:o,k2:o,k3:o,k4:o,kernelMatrix:x,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:o,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:o,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:o,overlineThickness:o,paintOrder:null,panose1:null,path:null,pathLength:o,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:f,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:o,pointsAtY:o,pointsAtZ:o,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:x,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:x,rev:x,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:x,requiredFeatures:x,requiredFonts:x,requiredFormats:x,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:o,specularExponent:o,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:o,strikethroughThickness:o,string:null,stroke:null,strokeDashArray:x,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:o,strokeOpacity:o,strokeWidth:null,style:null,surfaceScale:o,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:x,tabIndex:o,tableValues:null,target:null,targetX:o,targetY:o,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:x,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:o,underlineThickness:o,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:o,values:null,vAlphabetic:o,vMathematical:o,vectorEffect:null,vHanging:o,vIdeographic:o,version:null,vertAdvY:o,vertOriginX:o,vertOriginY:o,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:o,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null},space:"svg",transform:pn}),fn=L({properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null},space:"xlink",transform(e,n){return"xlink:"+n.slice(5).toLowerCase()}}),mn=L({attributes:{xmlnsxlink:"xmlns:xlink"},properties:{xmlnsXLink:null,xmlns:null},space:"xmlns",transform:dn}),gn=L({properties:{xmlBase:null,xmlLang:null,xmlSpace:null},space:"xml",transform(e,n){return"xml:"+n.slice(3).toLowerCase()}}),jn={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"},Nn=/[A-Z]/g,ln=/-[a-z]/g,Un=/^data[-\w.:]+$/i;function zn(e,n){const t=N(n);let l=n,r=v;if(t in e.normal)return e.property[e.normal[t]];if(t.length>4&&t.slice(0,4)==="data"&&Un.test(n)){if(n.charAt(4)==="-"){const a=n.slice(5).replace(ln,Hn);l="data"+a.charAt(0).toUpperCase()+a.slice(1)}else{const a=n.slice(4);if(!ln.test(a)){let i=a.replace(Nn,Fn);i.charAt(0)!=="-"&&(i="-"+i),n="data"+i}}r=F}return new r(l,n)}function Fn(e){return"-"+e.toLowerCase()}function Hn(e){return e.charAt(1).toUpperCase()}const Bn=sn([cn,_n,fn,mn,gn],"html"),H=sn([cn,In,fn,mn,gn],"svg");function Xn(e){return e.join(" ").trim()}var w={},j,tn;function Vn(){if(tn)return j;tn=1;var e=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,n=/\n/g,t=/^\s*/,l=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,r=/^:\s*/,a=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,i=/^[;\s]*/,s=/^\s+|\s+$/g,m=`
`,p="/",y="*",S="",Cn="comment",kn="declaration";j=function(h,E){if(typeof h!="string")throw new TypeError("First argument must be a string");if(!h)return[];E=E||{};var R=1,k=1;function K(d){var c=d.match(n);c&&(R+=c.length);var C=d.lastIndexOf(m);k=~C?d.length-C:k+d.length}function W(){var d={line:R,column:k};return function(c){return c.position=new Y(d),J(),c}}function Y(d){this.start=d,this.end={line:R,column:k},this.source=E.source}Y.prototype.content=h;function G(d){var c=new Error(E.source+":"+R+":"+k+": "+d);if(c.reason=d,c.filename=E.source,c.line=R,c.column=k,c.source=h,!E.silent)throw c}function D(d){var c=d.exec(h);if(c){var C=c[0];return K(C),h=h.slice(C.length),c}}function J(){D(t)}function $(d){var c;for(d=d||[];c=Z();)c!==!1&&d.push(c);return d}function Z(){var d=W();if(!(p!=h.charAt(0)||y!=h.charAt(1))){for(var c=2;S!=h.charAt(c)&&(y!=h.charAt(c)||p!=h.charAt(c+1));)++c;if(c+=2,S===h.charAt(c-1))return G("End of comment missing");var C=h.slice(2,c-2);return k+=2,K(C),h=h.slice(c),k+=2,d({type:Cn,comment:C})}}function Sn(){var d=W(),c=D(l);if(c){if(Z(),!D(r))return G("property missing ':'");var C=D(a),En=d({type:kn,property:q(c[0].replace(e,S)),value:C?q(C[0].replace(e,S)):S});return D(i),En}}function bn(){var d=[];$(d);for(var c;c=Sn();)c!==!1&&(d.push(c),$(d));return d}return J(),bn()};function q(h){return h?h.replace(s,S):S}return j}var on;function qn(){if(on)return w;on=1;var e=w&&w.__importDefault||function(l){return l&&l.__esModule?l:{default:l}};Object.defineProperty(w,"__esModule",{value:!0}),w.default=t;var n=e(Vn());function t(l,r){var a=null;if(!l||typeof l!="string")return a;var i=(0,n.default)(l),s=typeof r=="function";return i.forEach(function(m){if(m.type==="declaration"){var p=m.property,y=m.value;s?r(p,y,m):y&&(a=a||{},a[p]=y)}}),a}return w}var O={},rn;function Kn(){if(rn)return O;rn=1,Object.defineProperty(O,"__esModule",{value:!0}),O.camelCase=void 0;var e=/^--[a-zA-Z0-9_-]+$/,n=/-([a-z])/g,t=/^[^-]+$/,l=/^-(webkit|moz|ms|o|khtml)-/,r=/^-(ms)-/,a=function(p){return!p||t.test(p)||e.test(p)},i=function(p,y){return y.toUpperCase()},s=function(p,y){return"".concat(y,"-")},m=function(p,y){return y===void 0&&(y={}),a(p)?p:(p=p.toLowerCase(),y.reactCompat?p=p.replace(r,s):p=p.replace(l,s),p.replace(n,i))};return O.camelCase=m,O}var M,an;function Wn(){if(an)return M;an=1;var e=M&&M.__importDefault||function(r){return r&&r.__esModule?r:{default:r}},n=e(qn()),t=Kn();function l(r,a){var i={};return!r||typeof r!="string"||(0,n.default)(r,function(s,m){s&&m&&(i[(0,t.camelCase)(s,a)]=m)}),i}return l.default=l,M=l,M}var Yn=Wn();const Gn=wn(Yn),B={}.hasOwnProperty,Jn=new Map,$n=/[A-Z]/g,Zn=new Set(["table","tbody","thead","tfoot","tr"]),Qn=new Set(["td","th"]),hn="https://github.com/syntax-tree/hast-util-to-jsx-runtime";function ne(e,n){if(!n||n.Fragment===void 0)throw new TypeError("Expected `Fragment` in options");const t=n.filePath||void 0;let l;if(n.development){if(typeof n.jsxDEV!="function")throw new TypeError("Expected `jsxDEV` in options when `development: true`");l=ue(t,n.jsxDEV)}else{if(typeof n.jsx!="function")throw new TypeError("Expected `jsx` in production options");if(typeof n.jsxs!="function")throw new TypeError("Expected `jsxs` in production options");l=ie(t,n.jsx,n.jsxs)}const r={Fragment:n.Fragment,ancestors:[],components:n.components||{},create:l,elementAttributeNameCase:n.elementAttributeNameCase||"react",evaluater:n.createEvaluater?n.createEvaluater():void 0,filePath:t,ignoreInvalidStyle:n.ignoreInvalidStyle||!1,passKeys:n.passKeys!==!1,passNode:n.passNode||!1,schema:n.space==="svg"?H:Bn,stylePropertyNameCase:n.stylePropertyNameCase||"dom",tableCellAlignToStyle:n.tableCellAlignToStyle!==!1},a=yn(r,e,void 0);return a&&typeof a!="string"?a:r.create(e,r.Fragment,{children:a||void 0},void 0)}function yn(e,n,t){if(n.type==="element")return ee(e,n,t);if(n.type==="mdxFlowExpression"||n.type==="mdxTextExpression")return le(e,n);if(n.type==="mdxJsxFlowElement"||n.type==="mdxJsxTextElement")return oe(e,n,t);if(n.type==="mdxjsEsm")return te(e,n);if(n.type==="root")return re(e,n,t);if(n.type==="text")return ae(e,n)}function ee(e,n,t){const l=e.schema;let r=l;n.tagName.toLowerCase()==="svg"&&l.space==="html"&&(r=H,e.schema=r),e.ancestors.push(n);const a=xn(e,n.tagName,!1),i=se(e,n);let s=V(e,n);return Zn.has(n.tagName)&&(s=s.filter(function(m){return typeof m=="string"?!Tn(m):!0})),vn(e,i,a,n),X(i,s),e.ancestors.pop(),e.schema=l,e.create(n,a,i,t)}function le(e,n){if(n.data&&n.data.estree&&e.evaluater){const l=n.data.estree.body[0];return T(l.type==="ExpressionStatement"),e.evaluater.evaluateExpression(l.expression)}A(e,n.position)}function te(e,n){if(n.data&&n.data.estree&&e.evaluater)return e.evaluater.evaluateProgram(n.data.estree);A(e,n.position)}function oe(e,n,t){const l=e.schema;let r=l;n.name==="svg"&&l.space==="html"&&(r=H,e.schema=r),e.ancestors.push(n);const a=n.name===null?e.Fragment:xn(e,n.name,!0),i=ce(e,n),s=V(e,n);return vn(e,i,a,n),X(i,s),e.ancestors.pop(),e.schema=l,e.create(n,a,i,t)}function re(e,n,t){const l={};return X(l,V(e,n)),e.create(n,e.Fragment,l,t)}function ae(e,n){return n.value}function vn(e,n,t,l){typeof t!="string"&&t!==e.Fragment&&e.passNode&&(n.node=l)}function X(e,n){if(n.length>0){const t=n.length>1?n:n[0];t&&(e.children=t)}}function ie(e,n,t){return l;function l(r,a,i,s){const p=Array.isArray(i.children)?t:n;return s?p(a,i,s):p(a,i)}}function ue(e,n){return t;function t(l,r,a,i){const s=Array.isArray(a.children),m=Pn(l);return n(r,a,i,s,{columnNumber:m?m.column-1:void 0,fileName:e,lineNumber:m?m.line:void 0},void 0)}}function se(e,n){const t={};let l,r;for(r in n.properties)if(r!=="children"&&B.call(n.properties,r)){const a=pe(e,r,n.properties[r]);if(a){const[i,s]=a;e.tableCellAlignToStyle&&i==="align"&&typeof s=="string"&&Qn.has(n.tagName)?l=s:t[i]=s}}if(l){const a=t.style||(t.style={});a[e.stylePropertyNameCase==="css"?"text-align":"textAlign"]=l}return t}function ce(e,n){const t={};for(const l of n.attributes)if(l.type==="mdxJsxExpressionAttribute")if(l.data&&l.data.estree&&e.evaluater){const a=l.data.estree.body[0];T(a.type==="ExpressionStatement");const i=a.expression;T(i.type==="ObjectExpression");const s=i.properties[0];T(s.type==="SpreadElement"),Object.assign(t,e.evaluater.evaluateExpression(s.argument))}else A(e,n.position);else{const r=l.name;let a;if(l.value&&typeof l.value=="object")if(l.value.data&&l.value.data.estree&&e.evaluater){const s=l.value.data.estree.body[0];T(s.type==="ExpressionStatement"),a=e.evaluater.evaluateExpression(s.expression)}else A(e,n.position);else a=l.value===null?!0:l.value;t[r]=a}return t}function V(e,n){const t=[];let l=-1;const r=e.passKeys?new Map:Jn;for(;++l<n.children.length;){const a=n.children[l];let i;if(e.passKeys){const m=a.type==="element"?a.tagName:a.type==="mdxJsxFlowElement"||a.type==="mdxJsxTextElement"?a.name:void 0;if(m){const p=r.get(m)||0;i=m+"-"+p,r.set(m,p+1)}}const s=yn(e,a,i);s!==void 0&&t.push(s)}return t}function pe(e,n,t){const l=zn(e.schema,n);if(!(t==null||typeof t=="number"&&Number.isNaN(t))){if(Array.isArray(t)&&(t=l.commaSeparated?Ln(t):Xn(t)),l.property==="style"){let r=typeof t=="object"?t:de(e,String(t));return e.stylePropertyNameCase==="css"&&(r=fe(r)),["style",r]}return[e.elementAttributeNameCase==="react"&&l.space?jn[l.property]||l.property:l.attribute,t]}}function de(e,n){try{return Gn(n,{reactCompat:!0})}catch(t){if(e.ignoreInvalidStyle)return{};const l=t,r=new un("Cannot parse `style` attribute",{ancestors:e.ancestors,cause:l,ruleId:"style",source:"hast-util-to-jsx-runtime"});throw r.file=e.filePath||void 0,r.url=hn+"#cannot-parse-style-attribute",r}}function xn(e,n,t){let l;if(!t)l={type:"Literal",value:n};else if(n.includes(".")){const r=n.split(".");let a=-1,i;for(;++a<r.length;){const s=Q(r[a])?{type:"Identifier",name:r[a]}:{type:"Literal",value:r[a]};i=i?{type:"MemberExpression",object:i,property:s,computed:!!(a&&s.type==="Literal"),optional:!1}:s}l=i}else l=Q(n)&&!/^[a-z]/.test(n)?{type:"Identifier",name:n}:{type:"Literal",value:n};if(l.type==="Literal"){const r=l.value;return B.call(e.components,r)?e.components[r]:r}if(e.evaluater)return e.evaluater.evaluateExpression(l);A(e)}function A(e,n){const t=new un("Cannot handle MDX estrees without `createEvaluater`",{ancestors:e.ancestors,place:n,ruleId:"mdx-estree",source:"hast-util-to-jsx-runtime"});throw t.file=e.filePath||void 0,t.url=hn+"#cannot-handle-mdx-estrees-without-createevaluater",t}function fe(e){const n={};let t;for(t in e)B.call(e,t)&&(n[me(t)]=e[t]);return n}function me(e){let n=e.replace($n,ge);return n.slice(0,3)==="ms-"&&(n="-"+n),n}function ge(e){return"-"+e.toLowerCase()}function ke(e){const n=this;n.compiler=t;function t(l,r){return ne(l,{filePath:r.path,...e})}}export{ke as default};
